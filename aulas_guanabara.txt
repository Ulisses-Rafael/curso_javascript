aula1

1 aula de JavaScript

aula 4
criando os primeiros script

em um site temos 3 partes
conteúdo = HTML
Desingn = CSS
Interação = JavaScript

head configuração
alert("mandar msg pelo navegador!") ou alert.window("a mensagem aparece antes de abrir o conteúdo!")
window.confirm("Aqui aparece uma mensagem que pode ser confirmada ou cancelada")
window.prompt("Aqui abre um campo de preenchimento")

O Node. js pode ser definido como um ambiente de execução Javascript server-side. Isso significa que com o Node. js é possível criar aplicações Javascript para rodar como uma aplicação standalone em uma máquina, não dependendo de um browser para a execução, como estamos acostumados

comentários deixam os códigos muito bem documentados

no javascript comentar= // comentário em uma única linha
/* comentar em blocos*/

Para abrir o node js no visual code é só ir na aba terminal, novo terminal, escrever node

Para limpar a tela do node = ctrl+l
Variáveis no JS = Tipos primitivos primordiais
Number = todos os números(int,float...)
	infinity
	naN
String = conjuntos de caracteres(números + letras + símbolos)
Boolean = verdadeiro ou falso
null
undefined
object
	array
function

Para mostrar o tipo da variável = tipeof + variável

Parei em Tratamento de dados- Curso JavaScript #06

Manipulação de dados:
 converter  Number.parseInt(n) inteiros
 converter Number.parseFloat(n) real
           Number(n) = o javascript(Ecmascript) faz a conversão para inteiro ou real
converter números para string:
String(n)
n.toString()

Template String = nova forma de concatenar 
`O aluno ${nome} com ${idade} anos tirou ${nota} de nota`
'O aluno Ulisses com 37 anos tirou 5.5 de nota'

s.lengt // quantos caracteres a string tem
s.toUpperCase() // tudo maiúscula
s.toLowerCase() // tudo minúscula

para formatar saída de números vc pode usar ex:
num = 1545.5
num.fixed(2) aqui ele fixa duas casas decimais deixando a saída
1545.50

trocar o ponto por vírgula:
num.toFixed(2).replace (".",",")

formatar salário por país
num.localeString('pt-BR', {style: 'currency' , currency: 'BRL'})
num.localeString('pt-BR', {style: 'currency' , currency: 'USD'})
num.localeString('pt-BR', {style: 'currency' , currency: 'EUR'})

13/06/2021 
Operadores =

aritméticos: Cálculos
+ = 5+2 = 7
- = 5-2 = 3
* = 5*2 = 10
/ = 5/2 = 2.5
% = 5%2 = 1
divisão inteira(não usa virgula) resto da divisão inteira 

** = 5**2 = 25 
surgiu no ecmascript

*cuidado com a ordem de precedência = 
()
**
*, / ,%
+ , -
 
atribuição:
var a = 5 +3 lê a recebe 5+3
var b = a % 5 lê b recebe o resto da divisão
var c = 5*b**2 lê c recebe b ao quadrado vezes 5
var d = 10-a/2 lê d recebe 10 - a dividido por 2
var e = 6*2/d   lê e recebe 6*2/d
var f = b% e + 4 /e lê f recebe o resto de b%e  +  4 dividido por e

auto atribuição:
var n = 3
n = n + 4 = 7
n = n - 5 = 2
n = n * 4 = 8
n = n / 2 = 4
n = n ** 2 = 16
n = n % 5 = 1

simplificando

n + = 4
n - = 5
n * = 4
n / = 2
n ** = 2
n % = 5

operadores de incremento
var x = 5
x = x+1  x+=1 x++(pós incremento)  ++x(pré incremento)
x = x-1  x-=1 x--(pós decremento)  --x(pré decremento)

relacionais: resultado sempre vai ser um boolean(true, false)
>   maior
<   menor
>=  maior ou igual
<=  menor ou igual
==  igual
!=  diferente

5 == 5 true
5 == '5' true por que no javascript ele não testa o tipo(ele analisa se tem a mesma grandeza) por isso existe a identidade
identidade ===  (identico ele verifica se são identicos)
           !== desigual restrito
5!='5' false
5!== '5' true

lógicos:
! = sempre que aparecer é negação
&& = conjunção (uma caneta azul e uma preta) só satisfaz se atender as duas condições
|| = dijunção  (uma caneta azul ou uma preta) basta satisfazer uma condição só

ordem de execusão: negação, conjunção, dijunção
em uma expressão:
1 operador aritmético, 2 operador relacional, 3 operador lógico.

ternário: ? : dentro da mesma expressão
     teste ? true : false
ex: media>=7 ? "Aprovado" : "Reprovado"

04/06/2021
Conhecendo o Dom = Document Object Model
Àrvore DOM e Manipulando o DOM

O que é DOM?
conjunto de objetos


árvore DOM
                         Window
		location  document  history
			   html
		     head       body
               meta  title     
			   h1  p  p  div
				strong

selecionando: elementos da minha árvore DOM por:

-marca(por tag name)
comando = getElementsByTagName()

-ID
getElementById()
- Nome
getElementsByName()
- Classe
getElementsByClassName()
- Seletor
querySelector()
querySelectorAll()  id= #  class= .

site para consultar sobre eventos de javascript:
event reference
 em aula eventos como:
mouseenter
mousemove
musedown
moseup
clik
mouseout
 







